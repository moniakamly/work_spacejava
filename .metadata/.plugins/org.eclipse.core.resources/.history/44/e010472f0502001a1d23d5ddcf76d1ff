package mesStrings;

public class MaStringBuffer {

	private char[] lesCaracteres;
	private int n; // nombre de caracteres effectifs
	
	/**
	 * Les constructeurs
	 */

	public MaStringBuffer(int l) {
		lesCaracteres = new char [l];
		n = 0; //null pour les références
	}
	
	public MaStringBuffer () {
		this(16);
		//lesCaracteres = new char[16];
	}
	
	public MaStringBuffer(MaString ms) {
		int lg = ms.length(); 
		lesCaracteres = new char [lg + 16];
		for (int i =0; i < lg; i++) 
			lesCaracteres[i] = ms.charAt(i);
		n = lg;
	}
	
	public String toString() {
		return new String(lesCaracteres, 0, n);
	}
	
	/**
	 * Les méthodes
	 * @param args
	 */
	
	public int length() {
		return (lesCaracteres.length - 16);
	}
	
	
	public int capacity() {
		return (lesCaracteres.length );
	}
	
	public void ensureCapacity (int capMin) {
		
	}
	
	
	
	
	
	
	
	
	

	public static void main(String[] args) {
		MaStringBuffer sb = new MaStringBuffer();
		MaStringBuffer sb1 = new MaStringBuffer(MaString.valueOf(true));

		System.out.println("<" + sb + ">");
		System.out.println( sb.lesCaracteres.length );
		System.out.println(sb1);
		System.out.println(sb1.length());
		System.out.println(sb1.capacity());

	}

}
